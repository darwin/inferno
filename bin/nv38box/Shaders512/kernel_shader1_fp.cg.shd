!!FP1.0
# NV_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:32:28
# command line args: -profile fp30
#vendor NVIDIA Corporation
#version 1.0.02
#profile fp30
#program main
#semantic main.rays : TEXUNIT0
#semantic main.basic : TEXUNIT1
#semantic main.colors : TEXUNIT2
#semantic main.material : TEXUNIT3
#semantic main.uvinfo : TEXUNIT4
#semantic main.tridata : TEXUNIT5
#semantic main.WLightPos
#var samplerRECT rays : TEXUNIT0 : texunit 0 : 3 : 1
#var samplerRECT basic : TEXUNIT1 : texunit 1 : 4 : 1
#var samplerRECT colors : TEXUNIT2 : texunit 2 : 5 : 1
#var sampler2D material : TEXUNIT3 : texunit 3 : 6 : 1
#var samplerRECT uvinfo : TEXUNIT4 : texunit 4 : 7 : 1
#var samplerRECT tridata : TEXUNIT5 : texunit 5 : 8 : 1
#var float3 WLightPos[0] :  :  : 9 : 1
#var float3 WLightPos[1] :  :  : 9 : 1
#var float3 WPos : $vin.WPOS : WPOS : 0 : 1
#var float2 Tex0 : $vin.TEX0 : TEX0 : 1 : 1
#var float2 Tex1 : $vin.TEX1 : TEX1 : 2 : 1
#var float4 main : $vout.COLOR : COL : -1 : 1
DECLARE WLightPos$0;
DECLARE WLightPos$1;
TEX R0, f[TEX0].xyxx, TEX0, RECT;
UP2H H0.xy, R0.z;
ADDH H0.w, {1}.x, -H0.x;
ADDH H0.w, H0.w, -H0.y;
UP2H H1.xy, R0.w;
SLTR H1.w, R0.x, {1e+008}.x;
UP2H H2.y, R0.y;
ADDR R0.xy, {1536, 1056}.xyxx, H1.xyxx;
TEX R0.xyz, R0.xyxx, TEX5, RECT;
TEX R1.xyz, H1.xyxx, TEX4, RECT;
UP2H H3.xy, R1.y;
UP2H H4.xy, R1.x;
UP2H H5.xy, R1.z;
MOVH R1.z, H0.w;
MOVR R1.xy, H0.xyxx;
MULR R0.xyz, R0.xyzx, R1.x;
MULR R2.xy, H3.xyxx, R1.x;
MADR R2.xy, H4.xyxx, R1.z, R2.xyxx;
MADR R2.xy, H5.xyxx, R1.y, R2.xyxx;
TEX R2, R2.xyxx, TEX3, 2D;
ADDR R3.xy, {1536, 1024}.xyxx, H1.xyxx;
TEX R3.xyz, R3.xyxx, TEX5, RECT;
MADR R0.xyz, R3.xyzx, R1.z, R0.xyzx;
ADDR R3.xy, {1536, 1152}.xyxx, H1.xyxx;
TEX R3.xyz, R3.xyxx, TEX5, RECT;
MULR R3.xyz, R3.xyzx, R1.x;
ADDR R4.xy, {1536, 1088}.xyxx, H1.xyxx;
TEX R4.xyz, R4.xyxx, TEX5, RECT;
MADR R0.xyz, R4.xyzx, R1.y, R0.xyzx;
ADDR R4.xy, {1536, 1120}.xyxx, H1.xyxx;
TEX R4.xyz, R4.xyxx, TEX5, RECT;
MADR R3.xyz, R4.xyzx, R1.z, R3.xyzx;
ADDR R4.xy, {1536, 1184}.xyxx, H1.xyxx;
TEX R4.xyz, R4.xyxx, TEX5, RECT;
MADR R3.xyz, R4.xyzx, R1.y, R3.xyzx;
ADDR R1.xyz, WLightPos$1.xyzx, -R0.xyzx;
ADDR R0.xyz, WLightPos$0.xyzx, -R0.xyzx;
DP3R R0.w, R0.xyzx, R0.xyzx;
RSQR R0.w, R0.w;
MULR R0.xyz, R0.w, R0.xyzx;
DP3R R0.w, R1.xyzx, R1.xyzx;
RSQR R0.w, R0.w;
MULR R1.xyz, R0.w, R1.xyzx;
DP3R R0.w, R3.xyzx, R3.xyzx;
RSQR R0.w, R0.w;
MULR R3.xyz, R0.w, R3.xyzx;
DP3R R0.w, R3.xyzx, R1.xyzx;
DP3R R0.x, R3.xyzx, R0.xyzx;
MAXR R0.x, R0.x, {0}.x;
MAXR R0.w, R0.w, {0}.x;
ADDR R0.w, R0.x, R0.w;
MULR R2, R0.w, R2;
MOVR o[COLR], {0, 0, 0, 0};
MOVXC HC.x, H1.w;
MOVR o[COLR](GT.x), R2;
MOVXC HC.x, H1.w;
MOVR o[COLR].w(GT.x), H2.y;
END
# 57 instructions, 5 R-regs, 6 H-regs.
# End of program
