!!FP1.0
# NV_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:32:28
# command line args: -profile fp30
#vendor NVIDIA Corporation
#version 1.0.02
#profile fp30
#program main
#semantic main.rays : TEXUNIT0
#semantic main.boxmins : TEXUNIT1
#semantic main.boxmaxs : TEXUNIT2
#var samplerRECT rays : TEXUNIT0 : texunit 0 : 4 : 1
#var samplerRECT boxmins : TEXUNIT1 : texunit 1 : 5 : 1
#var samplerRECT boxmaxs : TEXUNIT2 : texunit 2 : 6 : 1
#var float3 WPos : $vin.WPOS : WPOS : 0 : 1
#var float2 Tex0 : $vin.TEX0 : TEX0 : 1 : 1
#var float2 Tex1 : $vin.TEX1 : TEX1 : 2 : 1
#var float2 Tex2 : $vin.TEX2 : TEX2 : 3 : 1
#var float main : $vout.COLOR : COL : -1 : 1
TEX R0.xyz, f[TEX1].xyxx, TEX0, RECT;
TEX R1.xyz, f[TEX0].xyxx, TEX0, RECT;
SNER H0.xyz, R0.xyzx, {0, 0, 0}.xyzx;
ADDX H0.w, H0.x, H0.y;
MINX H0.w, H0.w, {1}.x;
MOVX H1.x, {1}.x;
ADDX H0.x, H0.w, H0.z;
MINX H0.x, H0.x, {1}.x;
RCPR R2.x, R0.x;
RCPR R2.y, R0.y;
RCPR R2.z, R0.z;
MULR R2.xyz, {1}.x, R2.xyzx;
SGER H0.y, R2.x, {0}.x;
ADDX H0.y, -H0.y, {1}.x;
MULX H0.y, H0.x, H0.y;
SGER H0.z, R2.y, {0}.x;
ADDX H0.z, -H0.z, {1}.x;
MULX H0.z, H0.x, H0.z;
SGER H0.w, R2.z, {0}.x;
ADDX H0.w, -H0.w, {1}.x;
MULX H0.w, H0.x, H0.w;
FRCR R0.xy, f[TEX2].xyxx;
MADR R3.xy, R0.xyxx, {4, 4}.xyxx, {2112, 416}.xyxx;
MADR R0.xy, R0.xyxx, {4, 4}.xyxx, {2112, 320}.xyxx;
TEX R0.xyz, R0.xyxx, TEX1, RECT;
TEX R3.xyz, R3.xyxx, TEX2, RECT;
ADDR R2.w, R3.x, -R1.x;
MULR R2.w, R2.w, R2.x;
ADDR R4.x, R3.y, -R1.y;
MULR R4.x, R4.x, R2.y;
ADDR R4.y, R3.y, -R1.y;
MULR R4.y, R4.y, R2.y;
ADDR R4.z, R3.x, -R1.x;
MULR R4.z, R4.z, R2.x;
ADDR R4.w, R0.x, -R1.x;
MULR R4.w, R4.w, R2.x;
MOVXC HC.x, H0.y;
MOVR R2.w(GT.x), R4.w;
ADDR R4.w, R0.y, -R1.y;
MULR R4.w, R4.w, R2.y;
MOVXC HC.x, H0.z;
MOVR R4.w(GT.x), R4.x;
SGTR H1.y, R4.w, R2.w;
ADDR R4.x, R0.y, -R1.y;
MULR R4.x, R4.x, R2.y;
MOVXC HC.x, H0.z;
MOVR R4.y(GT.x), R4.x;
SLTR H0.z, R4.y, R2.w;
MULX H0.z, H0.x, H0.z;
ADDR R4.x, R0.x, -R1.x;
MULR R4.x, R4.x, R2.x;
MOVXC HC.x, H0.y;
MOVR R4.x(GT.x), R4.z;
SGTR H0.y, R4.w, R4.x;
MULX H0.y, H0.x, H0.y;
SGTR H1.z, R4.x, R4.y;
ADDX H1.y, H1.z, H1.y;
MINX H1.y, H1.y, {1}.x;
MULX H1.y, H0.x, H1.y;
MOVXC HC.x, H1.y;
MOVX H1.x(GT.x), {0}.x;
ADDR R4.z, R3.z, -R1.z;
ADDR R3.x, R3.z, -R1.z;
MULR R3.x, R3.x, R2.z;
MULR R4.z, R4.z, R2.z;
ADDR R3.y, R0.z, -R1.z;
ADDR R0.x, R0.z, -R1.z;
MULR R0.x, R0.x, R2.z;
MULR R0.y, R3.y, R2.z;
MOVXC HC.x, H0.w;
MOVR R0.y(GT.x), R4.z;
MOVXC HC.x, H0.w;
MOVR R3.x(GT.x), R0.x;
MOVXC HC.x, H0.y;
MOVR R4.x(GT.x), R4.w;
SGTR H0.y, R4.x, R3.x;
MOVXC HC.x, H0.z;
MOVR R2.w(GT.x), R4.y;
SGTR H0.z, R0.y, R2.w;
ADDX H0.z, H0.y, H0.z;
MINX H0.z, H0.z, {1}.x;
MULX H0.z, H0.x, H0.z;
MOVXC HC.x, H0.z;
MOVX H1.x(GT.x), {0}.x;
SLTR H0.y, R3.x, R2.w;
MULX H0.y, H0.x, H0.y;
MOVXC HC.x, H0.y;
MOVR R2.w(GT.x), R3.x;
SLTR H0.y, R2.w, {0}.x;
MULX H0.y, H0.x, H0.y;
MOVXC HC.x, H0.y;
MOVX H1.x(GT.x), {0}.x;
MOVR R0.x, {-1}.x;
MOVXC HC.x, H1.x;
MOVR R0.x(GT.x), {1}.x;
MOVR o[COLR].x, {-1}.x;
MOVXC HC.x, H0.x;
MOVR o[COLR].x(GT.x), R0.x;
END
# 98 instructions, 5 R-regs, 2 H-regs.
# End of program
