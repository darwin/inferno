!!VP2.0
# NV_vertex_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:32:28
# command line args: -profile vp30
# nv30vp backend compiling 'main' program
#vendor NVIDIA Corporation
#version 1.0.02
#profile vp30
#program main
#semantic main.ModelViewProj
#semantic main.ModelViewT
#semantic main.ModelI
#semantic main.WLightPos
#var float4x4 ModelViewProj :  : c[0], 4 : 1 : 1
#var float4x4 ModelViewT :  : c[4], 4 : 2 : 1
#var float4x4 ModelI :  : c[8], 4 : 3 : 1
#var float4 WLightPos[0] :  : c[12] : 4 : 1
#var float4 WLightPos[1] :  : c[13] : 4 : 1
#var float4 IN.Position : $vin.POSITION : ATTR0 : 0 : 1
#var float3 IN.Normal : $vin.NORMAL : ATTR2 : 0 : 1
#var float4 IN.Color : $vin.COLOR : ATTR3 : 0 : 1
#var float4 IN.Tex0 : $vin.TEXCOORD0 : ATTR8 : 0 : 1
#var float4 IN.Tex1 : $vin.TEXCOORD1 : ATTR9 : 0 : 1
#var float4 main.Position : $vout.POSITION : HPOS : -1 : 1
#var float4 main.Tex0 : $vout.TEX0 : TEX0 : -1 : 1
#var float4 main.Color : $vout.COLOR0 : COL0 : -1 : 1
#const c[14] = 0 0 1 0
#const c[15] = 16 2 0 0
b0:
	MOV o[TEX0], v[8];
	DP4 o[HPOS].x, c[0], v[0];
	DP4 o[HPOS].y, c[1], v[0];
	DP4 o[HPOS].z, c[2], v[0];
	DP4 o[HPOS].w, c[3], v[0];
	MOV R1, c[12];
	DP4 R0.x, c[8], R1;
	DP4 R0.y, c[9], R1;
	DP4 R0.z, c[10], R1;
	ADD R0.yzw, R0.xxyz, -v[0].xxyz;
	DP3 R0.x, R0.yzwy, R0.yzwy;
	RSQ R0.x, R0.x;
	MUL R0.xyz, R0.x, R0.yzwy;
	DP3 R1.x, v[2].xyzx, R0.xyzx;
	MOV R3.x, c[4].z;
	MOV R3.y, c[5].z;
	MOV R3.z, c[6].z;
	ADD R0.yzw, R0.xxyz, R3.xxyz;
	DP3 R0.x, R0.yzwy, R0.yzwy;
	RSQ R0.x, R0.x;
	MUL R0.xyz, R0.x, R0.yzwy;
	DP3 R1.y, v[2].xyzx, R0.xyzx;
	MOV R1.zw, c[15].x;
	LIT R0.yz, R1;
	ADD R2, R2.x, R0.y;
	ADD R2.w, R2.x, R0.z;
	MOV R1, c[13];
	DP4 R0.x, c[8], R1;
	DP4 R0.y, c[9], R1;
	DP4 R0.z, c[10], R1;
	ADD R0.yzw, R0.xxyz, -v[0].xxyz;
	DP3 R0.x, R0.yzwy, R0.yzwy;
	RSQ R0.x, R0.x;
	MUL R0.xyz, R0.x, R0.yzwy;
	DP3 R1.x, v[2].xyzx, R0.xyzx;
	ADD R0.yzw, R0.xxyz, R3.xxyz;
	DP3 R0.x, R0.yzwy, R0.yzwy;
	RSQ R0.x, R0.x;
	MUL R0.xyz, R0.x, R0.yzwy;
	DP3 R1.y, v[2].xyzx, R0.xyzx;
	MOV R1.zw, c[15].x;
	LIT R0.yz, R1;
	ADD R2.x, R2.x, R0.y;
	MOV o[COL0].x, R2;
	ADD o[COL0].w, R2.w, R0.z;
END
# 48 instructions
# 4 temp registers
# End of program
