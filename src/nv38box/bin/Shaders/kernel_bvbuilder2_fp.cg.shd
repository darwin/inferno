!!FP1.0
# NV_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:32:28
# command line args: -profile fp30
#vendor NVIDIA Corporation
#version 1.0.02
#profile fp30
#program main
#semantic main.data0
#semantic main.data1
#semantic main.data2
#semantic main.data3
#var samplerRECT data0 :  : texunit 0 : 5 : 1
#var samplerRECT data1 :  : texunit 1 : 6 : 1
#var samplerRECT data2 :  : texunit 2 : 7 : 1
#var samplerRECT data3 :  : texunit 3 : 8 : 1
#var float3 WPos : $vin.WPOS : WPOS : 0 : 1
#var float2 t00 : $vin.TEX0 : TEX0 : 1 : 1
#var float2 t01 : $vin.TEX1 : TEX1 : 2 : 1
#var float2 t10 : $vin.TEX2 : TEX2 : 3 : 1
#var float2 t11 : $vin.TEX3 : TEX3 : 4 : 1
#var float4 color : $vout.COLOR : COL : 9 : 1
TEX R0, f[TEX0].xyxx, TEX0, RECT;
TEX R1, f[TEX1].xyxx, TEX1, RECT;
SEQR H0.x, R0.w, {0}.x;
ADDX H0.y, -H0.x, {1}.x;
SEQR H0.z, R1.w, {0}.x;
ADDX H0.w, -H0.z, {1}.x;
MOVR R2.x, {1}.x;
MOVXC HC.x, H0.y;
MOVR R2.x(GT.x), {0}.x;
MOVXC HC.x, H0.w;
MOVR R2.x(GT.x), {0}.x;
TEX R3, f[TEX2].xyxx, TEX2, RECT;
TEX R4, f[TEX3].xyxx, TEX3, RECT;
SEQR H0.y, R3.w, {0}.x;
ADDX H0.w, -H0.y, {1}.x;
MOVXC HC.x, H0.w;
MOVR R2.x(GT.x), {0}.x;
SEQR H0.w, R4.w, {0}.x;
ADDX H1.x, -H0.w, {1}.x;
MOVXC HC.x, H1.x;
MOVR R2.x(GT.x), {0}.x;
SNER H1.x, R2.x, {0}.x;
ADDX H1.x, -H1.x, {1}.x;
MOVXC HC.x, H0.w;
MOVR R4.xyz(GT.x), {-1e+008, -1e+008, -1e+008}.xyzx;
MOVXC HC.x, H0.y;
MOVR R3.xyz(GT.x), {-1e+008, -1e+008, -1e+008}.xyzx;
MAXR R4, R3, R4;
MOVXC HC.x, H0.z;
MOVR R1.xyz(GT.x), {-1e+008, -1e+008, -1e+008}.xyzx;
MOVXC HC.x, H0.x;
MOVR R0.xyz(GT.x), {-1e+008, -1e+008, -1e+008}.xyzx;
MAXR R1, R0, R1;
MAXR o[COLR], R1, R4;
MOVXC HC.x, H1.x;
MOVR o[COLR].w(GT.x), {1}.x;
END
# 36 instructions, 5 R-regs, 2 H-regs.
# End of program
