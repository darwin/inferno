!!FP1.0
# NV_fragment_program generated by NVIDIA Cg compiler
# cgc version 1.2.1001, build date Mar 17 2004  10:32:28
# command line args: -profile fp30
#vendor NVIDIA Corporation
#version 1.0.02
#profile fp30
#program main
#semantic main.rays : TEXUNIT0
#semantic main.tris_posx : TEXUNIT1
#semantic main.tris_posy : TEXUNIT2
#semantic main.tris_posz : TEXUNIT3
#var samplerRECT rays : TEXUNIT0 : texunit 0 : 4 : 1
#var samplerRECT tris_posx : TEXUNIT1 : texunit 1 : 5 : 1
#var samplerRECT tris_posy : TEXUNIT2 : texunit 2 : 6 : 1
#var samplerRECT tris_posz : TEXUNIT3 : texunit 3 : 7 : 1
#var float3 WPos : $vin.WPOS : WPOS : 0 : 1
#var float2 Tex0 : $vin.TEX0 : TEX0 : 1 : 1
#var float2 Tex1 : $vin.TEX1 : TEX1 : 2 : 1
#var float2 Tex2 : $vin.TEX2 : TEX2 : 3 : 1
#var float4 main : $vout.COLOR : COL : -1 : 1
TEX R0.xyz, f[TEX1].xyxx, TEX0, RECT;
TEX R1, f[TEX0].xyxx, TEX0, RECT;
MOVX H0.x, {0}.x;
MOVX H0.y, {0}.x;
MOVX H0.z, {0}.x;
MOVX H0.w, {0}.x;
MOVX H1.x, {0}.x;
MOVX H1.y, {0}.x;
UP2H H1.z, R1.w;
FRCR R2.xy, f[TEX2].xyxx;
MADR R3.xy, R2.xyxx, {32, 32}.xyxx, {2176, 256}.xyxx;
TEX R3.xyz, R3.xyxx, TEX1, RECT;
MADR R4.xy, R2.xyxx, {32, 32}.xyxx, {2176, 320}.xyxx;
TEX R4.xyz, R4.xyxx, TEX3, RECT;
ADDR R4.xyz, R4.xyzx, -R3.xyzx;
MULR R5.xyz, R0.zxyz, R4.yzxy;
MADR R5.xyz, R0.yzxy, R4.zxyz, -R5.xyzx;
ADDR R6.xyz, R1.xyzx, -R3.xyzx;
MADR R7.xy, R2.xyxx, {32, 32}.xyxx, {2176, 288}.xyxx;
TEX R7.xyz, R7.xyxx, TEX2, RECT;
ADDR R3.xyz, R7.xyzx, -R3.xyzx;
MULR R2.xy, R2.xyxx, {32, 32}.xyxx;
PK2H R2.x, R2.xyxx;
MOVR o[COLR].w, R2.x;
DP3R R2.x, R6.xyzx, R5.xyzx;
DP3R R2.y, R3.xyzx, R5.xyzx;
SGER H1.w, R2.x, {0}.x;
MOVXC HC.x, H1.w;
MOVX H0.x(GT.x), {1}.x;
SLER H1.w, R2.x, R2.y;
MOVXC HC.x, H1.w;
MOVX H0.y(GT.x), H0.x;
SGTR H0.x, R2.y, {9.9999997e-005}.x;
MULR R5.xyz, R6.zxyz, R3.yzxy;
MADR R5.xyz, R6.yzxy, R3.zxyz, -R5.xyzx;
DP3R R0.x, R0.xyzx, R5.xyzx;
DP3R R0.y, R4.xyzx, R5.xyzx;
SGER H1.w, R0.x, {0}.x;
MOVXC HC.x, H1.w;
MOVX H0.z(GT.x), H0.y;
ADDR R0.z, R2.x, R0.x;
SLER H0.y, R0.z, R2.y;
MOVXC HC.x, H0.y;
MOVX H0.w(GT.x), H0.z;
MOVXC HC.x, H0.x;
MOVX H1.x(GT.x), H0.w;
RCPR R2.y, R2.y;
MULR R2.y, {1}.x, R2.y;
MULR R0.y, R0.y, R2.y;
SGER H0.x, R0.y, {0}.x;
MOVXC HC.x, H0.x;
MOVX H1.y(GT.x), H1.x;
MULR R0.x, R0.x, R2.y;
MULR R2.y, R2.x, R2.y;
MOVX R3.w, H1.y;
MOVR R3.z, R0.x;
MOVR R3.y, R2.y;
SNER H0.x, R3.w, {0}.x;
PK2H R0.x, R3.yzyy;
MOVXC HC.x, H0.x;
MOVR o[COLR].z(GT.x), R0.x;
MOVXC HC.x, H0.x;
MOVR o[COLR].y(GT.x), R1.w;
MOVXC HC.x, H0.x;
MOVR o[COLR].y(GT.x), H1.z;
ADDX H0.x, -H0.x, {1}.x;
MOVXC HC.x, H0.x;
MOVR o[COLR].x(GT.x), {1e+008}.x;
END
# 68 instructions, 8 R-regs, 2 H-regs.
# End of program
